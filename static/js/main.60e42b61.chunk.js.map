{"version":3,"sources":["space.png","components/Images.js","components/Locations.js","components/MapSelect.js","components/FavoritesMenu.js","components/HelperPopover.js","components/Overlay.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","_ref","selectedMap","image","info","cogmap1","cogmap2","faintSignal","nadir","oshan","clarion","atlas","kondaru","donut2","donut3","adventurezone","mapInfo","react_default","a","createElement","onDragStart","e","preventDefault","arr","i","g","push","concat","map","url","className","key","alt","src","withStyles","theme","main","marginTop","spacing","unit","line","fontSize","typography","caption","list","maxHeight","overflow","arrow","transition","transitions","create","easing","sharp","duration","enteringScreen","arrowShift","transform","headerText","marginLeft","props","classes","math","selectMap","_useState","useState","_useState2","Object","slicedToArray","collapseIn","collapse","index_es","onClick","align","variant","disabled","icons_index_es","in","component","name","location","loc","_math$modifiers","modifiers","xModifier","yModifier","_math$divisors","divisors","xDivisor","yDivisor","toString","toUpperCase","color","Map_default","paper","position","marginRight","textField","margin","width","MenuProps","menu","native","value","onChange","val","target","hidden","listHeight","overflowY","centerCoords","zoom","favorites","modFavorites","handleCollapse","_useState3","_useState4","permaCollapse","doPermaCollapse","useEffect","length","aria-owns","undefined","aria-haspopup","id","each","index","objectSpread","FormHelperTextProps","style","textAlign","helperText","InputProps","startAdornment","aria-label","endAdornment","favs","defineProperty","filter","items","HelperText","Fragment","type","size","href","rel","HelperPopover","open","anchorEl","onClose","anchorOrigin","popOver","popOverText","HelperPopover_HelperText","zIndex","resultsPos","maxWidth","goto","rightPanel","top","right","helpButton","bottom","marginBottom","selectedTile","doAnchor","mathIn","toggleMath","_useState5","input","actualX","actualY","_useState6","gpsValues","setValue","padding","data-testid","update","parseInt","tf","components_HelperPopover","Boolean","vertical","horizontal","tabIndex","components_Locations","components_MapSelect","components_FavoritesMenu","event","currentTarget","height","prev","newArr","backgroundImage","spaceTile","display","verticalAlign","imageUnclicked","cursor","imageClicked","noClick","userSelect","initial","mouse","pos","destiny","samedi","horizon","mushroom","manta","fleet","_useState7","_useState8","setZoom","scale","_useState9","_useState10","mousedown","clickDown","_useState11","_useState12","focussed","focus","_useState13","_useState14","doMenu","data","localStorage","getItem","JSON","parse","localKeys","keys","stateKeys","stringify","missingKey","oKey","includes","extraKey","forEach","obj","pop","apply","toConsumableArray","getStorage","setItem","iStyles","divStyle","transformOrigin","selectorStyle","tilePosition","onKeyDown","altKey","acceptableKeys","w","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","1","2","3","4","6","7","8","9","+","-","keyDown","_len","arguments","args","Array","_key","link","easterEggPos","easterEgg","Math","round","random","components_Overlay","onMouseLeave","onMouseEnter","onContextMenu","contextMenu","clientX","clientY","tileMath","imgCoords","onMouseDown","onMouseUp","onMouseMove","onWheel","mouseWheel","components_Images","fav","stopPropagation","item","stroke","fill","strokeWidth","mouseDown","MenuListProps","disablePadding","anchorPosition","left","anchorReference","closeMenu","x","y","_x","_x2","funcScale","deltaY","newScale","_imgCoords","_imgCoords2","imageX","imageY","centerScale","modifier","newTile","tile","tileX","tileY","centerX","window","screen","centerY","createMuiTheme","palette","useNextVariants","App","core_styles","pages_Main","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yPC4DzBC,EA1DA,SAAHC,GAA+B,IAAzBC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MACrBC,EAgBN,SAAiBF,GACb,IAAME,EAAO,CACTC,QAAO,kBACPC,QAAO,kBACPC,YAAW,sBACXC,MAAK,eACLC,MAAK,gBACLC,QAAO,kBAEPC,MAAK,gBAILC,QAAO,kBACPC,OAAM,iBAENC,OAAM,iBACNC,cAAa,yBAmBjB,OAAKX,EAAKF,GACHE,EAAKF,GADmBE,EAAc,QApDpCY,CAAQd,GACrB,OACIe,EAAAC,EAAAC,cAAA,OAAKC,YAAa,SAAAC,GAAC,OAAIA,EAAEC,mBACnB,WAEE,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBF,EAAIG,KAAI,GAAAC,OAAIH,EAAC,KAAAG,OAAIF,IAGzB,OAAOF,EAPT,GAQGK,IAAI,SAAAC,GACL,OAAOZ,EAAAC,EAAAC,cAAA,OAAKW,UAAW3B,EAAO4B,IAAKF,EAAKG,IAAKH,EAAKI,IAAG,GAAAN,OAAKvB,EAAI,KAAAuB,OAAIE,EAAG,+BC2EtEK,uBApFA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CAEFC,WAAY,GAAKF,EAAMG,QAAQC,MAEnCC,KAAM,CACFC,SAAUN,EAAMO,WAAWC,QAAQF,UAEvCG,KAAM,CACFC,UAAW,QACXC,SAAU,QAEdC,MAAO,CACHC,WAAYb,EAAMc,YAAYC,OAAO,CAAC,aAAc,CAChDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,kBAG7CC,WAAY,CACRC,UAAW,iBACXR,WAAYb,EAAMc,YAAYC,OAAO,CAAC,aAAc,CAChDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,kBAG7CG,WAAY,CACRC,WAAiC,EAArBvB,EAAMG,QAAQC,QA0DnBL,CAtDG,SAAAyB,GAAS,IACfC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAASC,EACDC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAvCK,EAAUH,EAAA,GAAEI,EAAQJ,EAAA,GAC3B,OACIhD,EAAAC,EAAAC,cAACmD,EAAA,EAAK,CAACxC,UAAW8B,EAAQxB,MACtBnB,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CACPC,QAAS,kBAAMF,GAAUD,IACzBI,MAAM,SACNC,QAAQ,WACR3C,UAAW8B,EAAQH,YAAW,kBAG9BxC,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACI,UAAQ,EAAC5C,UAAWsC,EAAaR,EAAQb,MAAQa,EAAQL,YACjEtC,EAAAC,EAAAC,cAACwD,EAAA,EAAK,QAGd1D,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,CAACM,GAAIR,GACVnD,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACO,UAAU,MAAMJ,QAAQ,QAAQ3C,UAAW8B,EAAQhB,MAC3D3B,EAAAC,EAAAC,cAAA,UACK,CACG,CAAE2D,KAAM,uBAAwBC,SAAU,CAAC,IAAK,MAChD,CAAED,KAAM,UAAWC,SAAU,CAAC,IAAK,MACnC,CAAED,KAAM,WAAYC,SAAU,CAAC,GAAI,MACnC,CAAED,KAAM,YAAaC,SAAU,CAAC,GAAI,MACpC,CAAED,KAAM,OAAQC,SAAU,CAAC,IAAK,MAChC,CAAED,KAAM,eAAgBC,SAAU,CAAC,IAAK,KACxC,CAAED,KAAM,0BAA2BC,SAAU,CAAC,IAAK,MACnD,CAAED,KAAM,oBAAqBC,SAAU,CAAC,GAAI,MAC9CnD,IAAI,SAAAoD,GAAO,IAAAC,EAAAf,OAAAC,EAAA,EAAAD,CACsBL,EAAKqB,UAAS,GAAtCC,EAASF,EAAA,GAAEG,EAASH,EAAA,GAAAI,EAAAnB,OAAAC,EAAA,EAAAD,CACEL,EAAKyB,SAAQ,GAAnCC,EAAQF,EAAA,GAAEG,EAAQH,EAAA,GAGzB,OAFAL,EAAID,SAAS,GAAKC,EAAID,SAAS,GAAKQ,EAAWJ,EAC/CH,EAAID,SAAS,GAAKC,EAAID,SAAS,GAAKS,EAAWJ,EAE3CnE,EAAAC,EAAAC,cAAA,MAAIY,IAAG,GAAAJ,OAAKqD,EAAIF,KAAI,KAAAnD,OAAIqD,EAAID,SAASU,aACjCxE,EAAAC,EAAAC,cAAA,KAAGW,UAAW8B,EAAQpB,MAAOwC,EAAIF,KAAKY,eAAkB,MAAA/D,OACjDqD,EAAID,SAAS,GAAE,SAAApD,OAAQqD,EAAID,SAAS,QAO/D9D,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACqB,MAAM,UAAUpB,QAAS,kBAAMT,EAAU,mBACjD7C,EAAAC,EAAAC,cAACyE,EAAA1E,EAAO,MACRD,EAAAC,EAAAC,cAAA,OAAKW,UAAW8B,EAAQpB,MAAK,8BCjClCN,uBA5CA,SAAAC,GAAK,MAAK,CACrB0D,MAAO,CACHC,SAAU,WACVzD,UAAWF,EAAMG,QAAQC,KACzBwD,YAAa5D,EAAMG,QAAQC,MAE/ByD,UAAW,CACPC,OAAQ9D,EAAMG,QAAQC,KACtB2D,MAAK,eAAAvE,OAAsC,EAArBQ,EAAMG,QAAQC,KAAQ,UAoCrCL,CAhCG,SAAAyB,GAAS,IACfC,EAAoCD,EAApCC,QAASE,EAA2BH,EAA3BG,UAAW5D,EAAgByD,EAAhBzD,YAC5B,OACIe,EAAAC,EAAAC,cAACmD,EAAA,EAAK,CAACxC,UAAW8B,EAAQiC,OACtB5E,EAAAC,EAAAC,cAACmD,EAAA,EAAW,CAACxC,UAAW8B,EAAQoC,WAC5B/E,EAAAC,EAAAC,cAACmD,EAAA,EAAM,CACH6B,UAAWvC,EAAQwC,KACnBC,QAAM,EACNC,MAAOpG,EACPqG,SAAU,SAAAlF,GACN,IAAImF,EAAMnF,EAAEoF,OAAOH,MACnB,OAAOxC,EAAU0C,KAGrBvF,EAAAC,EAAAC,cAAA,UAAQuF,QAAM,EAACJ,MAAM,iBAAe,kBACpCrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,eAAa,gBAC3BrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,WAAS,YACvBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,WAAS,YACvBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,UAAQ,WACtBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,UAAQ,WACtBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,SAAO,SACrBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,WAAS,WACvBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,SAAO,SACrBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,WAAS,WACvBrF,EAAAC,EAAAC,cAAA,UAAQmF,MAAM,SAAO,cCqF1BpE,uBAxHA,SAAAC,GAAK,MAAK,CACrB0D,MAAO,CACHC,SAAU,WACVzD,UAAgC,EAArBF,EAAMG,QAAQC,KACzBwD,YAAa5D,EAAMG,QAAQC,MAE/BkB,WAAY,CACRsC,YAAkC,EAArB5D,EAAMG,QAAQC,MAE/BQ,MAAO,CACHC,WAAYb,EAAMc,YAAYC,OAAO,CAAC,aAAc,CAChDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,kBAG7CC,WAAY,CACRC,UAAW,iBACXR,WAAYb,EAAMc,YAAYC,OAAO,CAAC,aAAc,CAChDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,kBAG7CqD,WAAY,CACR9D,UAAW,IAAoC,EAArBV,EAAMG,QAAQC,KACxCqE,UAAW,UAgGJ1E,CA5FO,SAAAyB,GAAS,IACnBC,EAA4ED,EAA5EC,QAASiD,EAAmElD,EAAnEkD,aAAcC,EAAqDnD,EAArDmD,KAAMC,EAA+CpD,EAA/CoD,UAAWC,EAAoCrD,EAApCqD,aAAcnD,EAAsBF,EAAtBE,KAAM3D,EAAgByD,EAAhBzD,YACpE6D,EACqCC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7CK,EAAUH,EAAA,GAAEgD,EAAchD,EAAA,GAAAiD,EACQlD,oBAAS,GAAMmD,EAAAjD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAeF,EAAA,GAOrC,OALAG,oBAAU,WACN,OAAIP,EAAU7G,GAAaqH,QAAU,IAAMnD,IAAegD,EAAsBH,GAAe,GACtFF,EAAU7G,GAAaqH,OAAS,EAAUN,GAAe,QAA7D,GACN,CAACtD,IAGA1C,EAAAC,EAAAC,cAACmD,EAAA,EAAK,CAACxC,UAAW8B,EAAQiC,OACtB5E,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CACPxC,UAAW8B,EAAQH,WACnB+D,YAAWpD,EAAa,sBAAmBqD,EAC3CC,gBAAc,OACdjD,QAAQ,WACRD,MAAM,SACND,QAAS,WACL,OAAKwC,EAAU7G,GAAaqH,QAExBF,GAAgB,GACTJ,GAAgB7C,IAHgB6C,GAAe,KAO9DhG,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACI,UAAQ,EAAC5C,UAAWsC,EAAaR,EAAQb,MAAQa,EAAQL,YACjEtC,EAAAC,EAAAC,cAACwD,EAAA,EAAK,OACG,aAGjB1D,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,CAACM,GAAIR,GACVnD,EAAAC,EAAAC,cAACmD,EAAA,EAAI,CAACqD,GAAG,iBAAiB7F,UAAW8B,EAAQ+C,YACxCI,EAAU7G,GAAa0B,IAAI,SAACgG,EAAMC,GAC/B,OACI5G,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,CAACvC,IAAG,GAAAJ,OAAKiG,EAAK7C,SAAQ,SAC3B9D,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNgC,MAAOsB,EAAK9C,KACZyB,SAAU,SAAAlF,GACN,IAAImF,EAAMnF,EAAEoF,OAAOH,MAEnB,OAAOU,EAAa,SAAAD,GAEhB,OADAA,EAAU7G,GAAa2H,GAAO/C,KAAO0B,EAC9BtC,OAAA4D,EAAA,EAAA5D,CAAA,GAAK6C,MAGpBgB,oBAAqB,CAAEC,MAAO,CAAEC,UAAW,WAC3CC,WAAU,UAAAvG,OAAYiG,EAAK7C,SAASU,WAAU,oBAAA9D,OAAmBiG,EAC5D7C,SAAS,GACVlB,EAAKyB,SAAS,GACdzB,EAAKqB,UAAU,GAAE,KAAAvD,OAAIiG,EAAK7C,SAAS,GAAKlB,EAAKyB,SAAS,GAAKzB,EAAKqB,UAAU,GAAE,KAChFiD,WAAY,CACRC,eACInH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SACrB7E,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CACPC,QAAS,kBAAMsC,EAAaC,EAAM,CAAC,EAAG,GAAIc,EAAK7C,WAC/CsD,aAAW,SAEXpH,EAAAC,EAAAC,cAACwD,EAAA,EAAU,QAIvB2D,aACIrH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,OACrB7E,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CACPC,QAAS,WAEL,OADyB,IAArBwC,EAAUQ,QAAcN,GAAe,GACpCD,EAAa,SAAAuB,GAAI,OAAArE,OAAA4D,EAAA,EAAA5D,CAAA,GACjBqE,EAAKrE,OAAAsE,EAAA,EAAAtE,CAAA,GACPhE,EAAcqI,EAAKrI,GAAauI,OAC7B,SAAAC,GAAK,OAAIA,IAAUd,SAI/BS,aAAW,UAEXpH,EAAAC,EAAAC,cAACwD,EAAA,EAAK,mBC3GpDgE,EAAa,WACf,OACI1H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0H,SAAA,KACI3H,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,MAAI0H,KAAK,KACL5H,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,WAAS,2FAGTF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,WAAS,cAAWF,EAAAC,EAAAC,cAAA,iBAAa,gCACjCF,EAAAC,EAAAC,cAAA,WAAS,cAAWF,EAAAC,EAAAC,cAAA,iBAAa,uCACjCF,EAAAC,EAAAC,cAAA,WAAS,cAAWF,EAAAC,EAAAC,cAAA,iBAAa,gDAIrCF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,MAAI0H,KAAK,KACL5H,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,0GACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qIACIF,EAAAC,EAAAC,cAAA,WAAS,6EACTF,EAAAC,EAAAC,cAAA,WAAS,kFAGbF,EAAAC,EAAAC,cAAA,8FAEJF,EAAAC,EAAAC,cAAA,0GACAF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,wEACAF,EAAAC,EAAAC,cAAA,8CAEIF,EAAAC,EAAAC,cAACmD,EAAA,EAAM,CACHqB,MAAM,YACNlB,QAAQ,WACRqE,KAAK,QACLC,KAAK,2DACLC,IAAI,sBACJvC,OAAO,UAAQ,4BAKvBxF,EAAAC,EAAAC,cAAA,gCAEIF,EAAAC,EAAAC,cAACmD,EAAA,EAAM,CACHqB,MAAM,YACNlB,QAAQ,WACRqE,KAAK,QACLC,KAAK,4CACLC,IAAI,sBACJvC,OAAO,UAAQ,cAGV,+BAGbxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAACmD,EAAA,EAAM,CACHqB,MAAM,YACNlB,QAAQ,WACRqE,KAAK,QACLC,KAAK,2CACLC,IAAI,sBACJvC,OAAO,UAAQ,cAGV,mCA0BNwC,EAnBO,SAAAtF,GAAS,IACnBC,EAAmDD,EAAnDC,QAASsF,EAA0CvF,EAA1CuF,KAAMC,EAAoCxF,EAApCwF,SAAUC,EAA0BzF,EAA1ByF,QAASC,EAAiB1F,EAAjB0F,aAC1C,OACIpI,EAAAC,EAAAC,cAACmD,EAAA,EAAO,CACJxC,UAAW8B,EAAQ0F,QACnBjB,aAAW,YACXV,GAAG,YACHuB,KAAMA,EACNC,SAAUA,EACVC,QAASA,EACTC,aAAcA,GAEdpI,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACG,QAAQ,UAAU3C,UAAW8B,EAAQ2F,aAC7CtI,EAAAC,EAAAC,cAACqI,EAAU,SCsQZtH,uBAnVA,SAAAC,GAAK,MAAK,CACrB6D,UAAW,CACPE,MAAO,IAEX9D,KAAM,CACFqH,OAAQ,EACR3D,SAAU,QACVpC,WAAYvB,EAAMG,QAAQC,KAC1BF,UAAWF,EAAMG,QAAQC,KACzB2D,MAAO,KAEXwD,WAAY,CACRD,OAAQ,EACR3D,SAAU,WACVzD,UAAWF,EAAMG,QAAQC,MAE7BQ,MAAO,CACHC,WAAYb,EAAMc,YAAYC,OAAO,CAAC,aAAc,CAChDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,kBAG7CC,WAAY,CACRC,UAAW,iBACXR,WAAYb,EAAMc,YAAYC,OAAO,CAAC,aAAc,CAChDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,kBAG7CG,WAAY,CACRC,WAAiC,EAArBvB,EAAMG,QAAQC,MAE9B+G,QAAS,CACL5F,WAAYvB,EAAMG,QAAQC,MAE9BgH,YAAa,CACTtD,OAAQ9D,EAAMG,QAAQC,KACtBoH,SAAU,IAA2B,GAArBxH,EAAMG,QAAQC,MAElCqH,KAAM,CACFH,OAAQ,EACRjG,UAAW,4BAEfqG,WAAY,CACR/D,SAAU,WACV2D,OAAQ,EACRK,IAAK,EACLC,MAAO,EACP7D,MAAO,KAEX8D,WAAY,CACRlE,SAAU,QACVmE,OAAQ,EACRF,MAAO,EACPG,aAAmC,EAArB/H,EAAMG,QAAQC,KAC5BwD,YAAkC,EAArB5D,EAAMG,QAAQC,QA4RpBL,CAxRC,SAAAyB,GAAS,IACbC,EAA+FD,EAA/FC,QAASuG,EAAsFxG,EAAtFwG,aAActD,EAAwElD,EAAxEkD,aAAc/C,EAA0DH,EAA1DG,UAAW5D,EAA+CyD,EAA/CzD,YAAa4G,EAAkCnD,EAAlCmD,KAAMC,EAA4BpD,EAA5BoD,UAAWC,EAAiBrD,EAAjBqD,aACtFjD,EAC6BC,mBAAS,MAAKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAApCoF,EAAQlF,EAAA,GAAEmG,EAAQnG,EAAA,GACzBiD,EAC6BlD,oBAAS,GAAKmD,EAAAjD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAApCmD,EAAMlD,EAAA,GAAEmD,EAAUnD,EAAA,GAAAoD,EACKvG,mBAAS,CAAEwG,MAAO,CAAC,IAAK,IAAKC,QAAS,CAAC,EAAG,GAAIC,QAAS,CAAC,GAAI,MAAMC,EAAAzG,OAAAC,EAAA,EAAAD,CAAAqG,EAAA,GAAzFK,EAASD,EAAA,GAAEE,EAAQF,EAAA,GACpBpF,EAAWqF,EAAUH,QAAQ,GAAKG,EAAUH,QAAQ,GACtDjF,EAAWoF,EAAUF,QAAQ,GAAKE,EAAUF,QAAQ,GACpDvF,EAAYyF,EAAUJ,MAAM,GAAKI,EAAUH,QAAQ,GAAKlF,EACxDH,EAAYwF,EAAUJ,MAAM,GAAKI,EAAUF,QAAQ,GAAKlF,EAC5D,OACIvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0H,SAAA,KACI3H,EAAAC,EAAAC,cAAA,OAAKW,UAAW8B,EAAQxB,MACpBnB,EAAAC,EAAAC,cAACmD,EAAA,EAAK,KACFrD,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CACPxC,UAAW8B,EAAQH,WACnBc,QAAS,kBAAM+F,GAAYD,IAC3B5F,QAAQ,WACRD,MAAM,SACNmD,GAAG,cAAY,sBAGf1G,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACI,UAAQ,EAAC5C,UAAWuI,EAASzG,EAAQb,MAAQa,EAAQL,YAC7DtC,EAAAC,EAAAC,cAACwD,EAAA,EAAK,QAGd1D,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,CAACM,GAAIyF,GACVpJ,EAAAC,EAAAC,cAACmD,EAAA,EAAK,CAACwG,QAAQ,SACX7J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KAENrD,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,KACLrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CAACE,MAAM,UAAQ,iBACzBvD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CAACE,MAAM,UAAQ,eAGjCvD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CAACyG,cAAY,mBAGnB9J,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,KACLrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBtB,UAAW2F,EACX9D,SAAU,SAAAlF,GAAC,OAAI2J,EAAO3J,EAAG,QAAS,IAClCiF,MAAOsE,EAAUJ,MAAM,GACvBrC,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,MAChDiF,cAAe,gBAI3B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBtB,UAAW2F,EACX9D,SAAU,SAAAlF,GAAC,OAAI2J,EAAO3J,EAAG,UAAW,IACpCiF,MAAOsE,EAAUH,QAAQ,GACzBtC,WAAY,CACR4C,cAAe,kBAQ/B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,KACLrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBtB,UAAW2F,EACX9D,SAAU,SAAAlF,GAAC,OAAI2J,EAAO3J,EAAG,QAAS,IAClCiF,MAAOsE,EAAUJ,MAAM,GACvBrC,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,MAChDiF,cAAe,gBAI3B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBtB,UAAW2F,EACX9D,SAAU,SAAAlF,GAAC,OAAI2J,EAAO3J,EAAG,UAAW,IACpCiF,MAAOsE,EAAUF,QAAQ,GACzBvC,WAAY,CACR4C,cAAe,kBAQ/B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,KACLrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBM,MAAOsE,EAAUJ,MAAM,GAAK,EAC5B9F,UAAQ,EACRyD,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,MAChDiF,cAAe,gBAI3B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBtB,UAAW2F,EACX9D,SAAU,SAAAlF,GAAC,OAAI2J,EAAO3J,EAAG,UAAW,IACpCiF,MAAOsE,EAAUH,QAAQ,GACzBtC,WAAY,CACR4C,cAAe,kBAQ/B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,KACLrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBM,MAAOsE,EAAUJ,MAAM,GAAK,EAC5B9F,UAAQ,EACRyD,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,MAChDiF,cAAe,gBAI3B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBtB,UAAW2F,EACX9D,SAAU,SAAAlF,GAAC,OAAI2J,EAAO3J,EAAG,UAAW,IACpCiF,MAAOsE,EAAUF,QAAQ,GACzBvC,WAAY,CACR4C,cAAe,sBAS/C9J,EAAAC,EAAAC,cAACmD,EAAA,EAAK,CAACxC,UAAW8B,EAAQ8F,YACtBzI,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACxC,UAAW8B,EAAQH,WAAYgB,QAAQ,WAAWD,MAAM,SAASmD,GAAG,cAAY,oBAG5F1G,EAAAC,EAAAC,cAACmD,EAAA,EAAK,CAACwG,QAAQ,SACX7J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,KACLrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBM,MAAO6D,EAAa,GACpB5D,SAAU,SAAAlF,GACN,IAAImF,EAAMyE,SAAS5J,EAAEoF,OAAOH,OAE5B,OADKE,IAAKA,EAAM,GACT7C,EAAMH,UAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAClBgH,EAAE,CACLf,aAAc,CAAC3D,EAAK0E,EAAGf,aAAa,SAG5ChC,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,KAChDiF,cAAe,iBAI3B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNxC,UAAW8B,EAAQoC,UACnBM,MAAO6D,EAAa,GACpB5D,SAAU,SAAAlF,GACN,IAAImF,EAAMyE,SAAS5J,EAAEoF,OAAOH,OAE5B,OADKE,IAAKA,EAAM,GACT7C,EAAMH,UAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAClBgH,EAAE,CACLf,aAAc,CAACe,EAAGf,aAAa,GAAI3D,QAG3C2B,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,KAChDiF,cAAe,oBAOvC9J,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACG,QAAQ,WAAWD,MAAM,UAAQ,uBAG7CvD,EAAAC,EAAAC,cAACmD,EAAA,EAAK,CAACwG,QAAQ,SACX7J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAQ,KACLrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNI,UAAQ,EACR5C,UAAW8B,EAAQoC,UACnBM,MAAO6D,EAAa,GAAK5E,EAAWJ,EACpCgD,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,KAChDiF,cAAe,gBAI3B9J,EAAAC,EAAAC,cAACmD,EAAA,EAAS,KACNrD,EAAAC,EAAAC,cAACmD,EAAA,EAAS,CACNI,UAAQ,EACR5C,UAAW8B,EAAQoC,UACnBM,MAAO6D,EAAa,GAAK3E,EAAWJ,EACpC+C,WAAY,CACRC,eAAgBnH,EAAAC,EAAAC,cAACmD,EAAA,EAAc,CAACwB,SAAS,SAAO,KAChDiF,cAAe,oBAQ3C9J,EAAAC,EAAAC,cAACgK,EAAa,CACVvH,QAASA,EACTsF,KAAMkC,QAAQjC,GACdA,SAAUA,EACVC,QAAS,kBAAMgB,EAAS,OACxBf,aAAc,CACVgC,SAAU,MACVC,WAAY,WAGpBrK,EAAAC,EAAAC,cAACmD,EAAA,EAAU,CAACiH,UAAW,EAAGzJ,UAAW8B,EAAQgG,KAAMrF,QAAS,kBAAMsC,MAC9D5F,EAAAC,EAAAC,cAACwD,EAAA,EAAI,OAET1D,EAAAC,EAAAC,cAACqK,EAAS,CACV3H,KAAM,CAAEyB,SAAU,CAACC,EAAUC,GAAWN,UAAW,CAACC,EAAWC,IAC/DtB,UAAWA,EACX5D,YAAaA,KAGjBe,EAAAC,EAAAC,cAAA,OAAKW,UAAW8B,EAAQiG,YACpB5I,EAAAC,EAAAC,cAACsK,EAAS,CAAC3H,UAAWA,EAAW5D,YAAaA,IAC9Ce,EAAAC,EAAAC,cAACuK,EAAa,CACV5E,KAAMA,EACND,aAAcA,EACdE,UAAWA,EACX7G,YAAaA,EACb8G,aAAcA,EACdnD,KAAM,CAAEyB,SAAU,CAACC,EAAUC,GAAWN,UAAW,CAACC,EAAWC,MAEnEnE,EAAAC,EAAAC,cAACmD,EAAA,EAAG,CACAxC,UAAW8B,EAAQoG,WACnBzF,QAAS,SAAAoH,GACL,IAAInF,EAAMmF,EAAMC,cAChBxB,EAAS5D,KAGbvF,EAAAC,EAAAC,cAACwD,EAAA,EAAI,CAACqD,MAAO,CAAE6D,OAAQ,OAAQ3F,MAAO,OAAQ1C,UAAW,0BAKzE,SAASwH,EAAO3J,EAAGoF,EAAQoB,GACvB,IAAIrB,EAAMyE,SAAS5J,EAAEoF,OAAOH,OAE5B,OADKE,IAAKA,EAAM,GACTqE,EAAS,SAAAiB,GACZ,IAAIC,EAASD,EAAKrF,GAElB,OADAsF,EAAOlE,GAASrB,EACTtC,OAAA4D,EAAA,EAAA5D,CAAA,GAAK4H,EAAK5H,OAAAsE,EAAA,EAAAtE,CAAA,GAAEuC,EAASsF,SC4HzB7J,uBAxdA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACF4J,gBAAe,OAAArK,OAASsK,IAAS,KACjCC,QAAS,QACThG,MAAO,KACP2F,OAAQ,MAKZ1L,MAAO,CACHgM,cAAe,SACfjG,MAAO,KACP2F,OAAQ,MAEZO,eAAgB,CACZC,OAAQ,QAEZC,aAAc,CACVD,OAAQ,YAEZE,QAAS,CACLC,WAAY,UAkcLtK,CA9bF,SAAAyB,GAAS,IACVC,EAAYD,EAAZC,QACRG,EACwBC,mBAAS,CAC7ByI,QAAS,CAAC,EAAG,GACbC,MAAO,CAAC,EAAG,GACXC,IAAK,EAAE,MAAO,KACdxC,aAAc,CAAC,IAAK,OACtBlG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GALKmH,EAAEjH,EAAA,GAAET,EAASS,EAAA,GAAAiD,EAMalD,mBAAS,WAAUmD,EAAAjD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAA7ChH,EAAWiH,EAAA,GAAErD,EAASqD,EAAA,GAAAoD,EACKvG,mBAAS,CACvC3D,QAAS,CACL,CAAEyE,KAAM,cAAeC,SAAU,CAAC,IAAK,MACvC,CAAED,KAAM,WAAYC,SAAU,CAAC,IAAK,OAExCzE,QAAS,CACL,CAAEwE,KAAM,cAAeC,SAAU,CAAC,IAAK,MACvC,CAAED,KAAM,mBAAoBC,SAAU,CAAC,GAAI,MAE/CxE,YAAa,CACT,CAAEuE,KAAM,cAAeC,SAAU,CAAC,IAAK,MACvC,CAAED,KAAM,uBAAwBC,SAAU,CAAC,IAAK,MAChD,CAAED,KAAM,gBAAiBC,SAAU,CAAC,IAAK,OAE7CtE,MAAO,CACH,CAAEqE,KAAM,eAAgBC,SAAU,CAAC,IAAK,MACxC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3CrE,QAAS,CACL,CAAEoE,KAAM,WAAYC,SAAU,CAAC,IAAK,MACpC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3C6H,QAAS,CACL,CAAE9H,KAAM,cAAeC,SAAU,CAAC,GAAI,MACtC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3CpE,MAAO,CACH,CAAEmE,KAAM,SAAUC,SAAU,CAAC,IAAK,MAClC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3C8H,OAAQ,GACRC,QAAS,CACL,CAAEhI,KAAM,UAAWC,SAAU,CAAC,IAAK,MACnC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3CgI,SAAU,CACN,CAAEjI,KAAM,UAAWC,SAAU,CAAC,IAAK,KACnC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3CiI,MAAO,CACH,CAAElI,KAAM,UAAWC,SAAU,CAAC,IAAK,MACnC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3CnE,QAAS,CACL,CAAEkE,KAAM,0BAA2BC,SAAU,CAAC,GAAI,KAClD,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,MAE3ClE,OAAQ,CACJ,CAAEiE,KAAM,UAAWC,SAAU,CAAC,IAAK,KACnC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3CkI,MAAO,CACH,CAAEnI,KAAM,UAAWC,SAAU,CAAC,IAAK,KACnC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,MAE3CjE,OAAQ,CACJ,CAAEgE,KAAM,aAAcC,SAAU,CAAC,IAAK,KACtC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,KACvC,CAAED,KAAM,eAAgBC,SAAU,CAAC,IAAK,OAE5CvE,MAAO,CACH,CAAEsE,KAAM,WAAYC,SAAU,CAAC,IAAK,MACpC,CAAED,KAAM,cAAeC,SAAU,CAAC,IAAK,OAE3ChE,cAAe,CACX,CAAE+D,KAAM,uBAAwBC,SAAU,CAAC,IAAK,MAChD,CAAED,KAAM,UAAWC,SAAU,CAAC,IAAK,MACnC,CAAED,KAAM,WAAYC,SAAU,CAAC,GAAI,MACnC,CAAED,KAAM,YAAaC,SAAU,CAAC,GAAI,MACpC,CAAED,KAAM,OAAQC,SAAU,CAAC,IAAK,MAChC,CAAED,KAAM,eAAgBC,SAAU,CAAC,IAAK,KACxC,CAAED,KAAM,0BAA2BC,SAAU,CAAC,IAAK,MACnD,CAAED,KAAM,oBAAqBC,SAAU,CAAC,GAAI,QAElD4F,EAAAzG,OAAAC,EAAA,EAAAD,CAAAqG,EAAA,GA1EKxD,EAAS4D,EAAA,GAAE3D,EAAY2D,EAAA,GAAAuC,EA2ENlJ,mBAAS,GAAEmJ,EAAAjJ,OAAAC,EAAA,EAAAD,CAAAgJ,EAAA,GAA5BpG,EAAIqG,EAAA,GAAEC,EAAOD,EAAA,GACdE,EAAQvG,EAAO,GACrBwG,EAC+BtJ,oBAAS,GAAMuJ,EAAArJ,OAAAC,EAAA,EAAAD,CAAAoJ,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAASF,EAAA,GAC3BG,EAC0B1J,oBAAS,GAAM2J,EAAAzJ,OAAAC,EAAA,EAAAD,CAAAwJ,EAAA,GAAlCE,EAAQD,EAAA,GAAEE,EAAKF,EAAA,GACtBG,EACuB9J,mBAAS,CAAE0I,MAAO,CAAC,EAAG,GAAIjG,OAAQ,OAAOsH,EAAA7J,OAAAC,EAAA,EAAAD,CAAA4J,EAAA,GAAzD1H,EAAI2H,EAAA,GAAEC,EAAMD,EAAA,GAGnBzG,oBAAU,WACN,IAAM2G,EA6RV,WACI,IAAIA,EAAOC,aAAaC,QAAQ,wBAChC,IAAKF,EAAM,OAAO,EAClBA,EAAOG,KAAKC,MAAMJ,GAClB,IAAIK,EAAYpK,OAAOqK,KAAKN,GACxBO,EAAYtK,OAAOqK,KAAKxH,GAC5B,GAAIuH,EAAU/G,SAAWiH,EAAUjH,QAAU6G,KAAKK,UAAUH,KAAeF,KAAKK,UAAUD,GAAY,CAClG,IAAIE,EAAaF,EAAU/F,OAAO,SAAAkG,GAAI,OAAKL,EAAUM,SAASD,KAC1DE,EAAWP,EAAU7F,OAAO,SAAAkG,GAAI,OAAKH,EAAUI,SAASD,KACxDD,EAAWnH,QACXmH,EAAWI,QAAQ,SAAA/M,GACf,IAAIgN,EAAM,GACVA,EAAIhN,GAAOgF,EAAUhF,GACrBkM,EAAI/J,OAAA4D,EAAA,EAAA5D,CAAA,GAAQ+J,EAASc,KAGzBF,EAAStH,QACTsH,EAASC,QAAQ,SAAA/M,GACb,IAAIgN,EAAM,GACVT,EAAUU,IAAGC,MAAbX,EAASpK,OAAAgL,EAAA,EAAAhL,CAAQ2K,IACjBP,EAAUQ,QAAQ,SAAA/M,GACdgN,EAAIhN,GAAOkM,EAAKlM,KAEpBkM,EAAOc,IAInB,OAAOd,EAxTMkB,GACTlB,GAAMjH,EAAaiH,IACxB,IAGH3G,oBACI,WAkRJ,IAAoBiB,EACI,kBADJA,EAjRDxB,KAkRewB,EAAO6F,KAAKK,UAAUlG,IACpD2F,aAAakB,QAAQ,uBAAwB7G,IAjR7C,CAAC6F,KAAKK,UAAU1H,KAGpB,IAAMsI,EAAU,CACZC,SAAU,CACNC,gBAAe,MACf/L,UAAS,eAAA7B,OAAiBuJ,EAAGyB,IAAI,GAAE,QAAAhL,OAAOuJ,EAAGyB,IAAI,GAAE,iBAAAhL,OAAgB0L,EAAK,MAE5EmC,cAActL,OAAA4D,EAAA,EAAA5D,CAAA,CACVuF,OAAQ,EACR3D,SAAU,SACP2J,EAAavE,EAAGf,gBA0B3B,OACIlJ,EAAAC,EAAAC,cAAA,OAAKW,UAAW8B,EAAQ2I,QAASmD,UAAW,SAAArO,GAAC,OA0KjD,SAAiBA,GACb,GAAKuM,EAAL,CAAsB,IAChB7L,EAAgBV,EAAhBU,IACN,GADsBV,EAAXsO,OACX,CACA,GAAY,MAAR5N,GAAuB,MAARA,EAAa,OAAO8E,EAAaC,GACpD,IAAI8I,EAAiB,CACjBC,EAAG,CAAC,EAAG,GACP3O,EAAG,EAAE,EAAG,GACR4O,EAAG,CAAC,GAAI,GACRC,EAAG,CAAC,EAAG,GACPC,QAAS,CAAC,EAAG,GACbC,UAAW,EAAE,EAAG,GAChBC,UAAW,CAAC,GAAI,GAChBC,WAAY,CAAC,EAAG,GAChBC,EAAK,EAAE,GAAI,GACXC,EAAK,CAAC,GAAI,GACVC,EAAK,CAAC,GAAI,GACVC,EAAK,EAAE,EAAG,GACVC,EAAK,CAAC,EAAG,GACTC,EAAK,EAAE,EAAG,GACVC,EAAK,CAAC,EAAG,GACTC,EAAK,CAAC,EAAG,GACTC,IAAK,EACLC,KAAM,GAEV,GAAK3M,OAAOqK,KAAKqB,GAAgBhB,SAAS7M,GACrC,CACD,IAAMyE,EAAMoJ,EAAe7N,GAC3B,GAAY,MAARA,GAAuB,MAARA,EAAa,CAC5B,GAAY,MAARA,GAAe+E,GAAQ,GAAI,OAC/B,GAAY,MAAR/E,GAAe+E,GAAQ,EAAG,OAE9B,OADAsG,EAAQtG,EAAON,GACRK,EAAaC,EAAON,GAG/B,OADAK,EAAaC,EAAMN,GACZhD,EAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GACZgH,EAAE,CACLf,aAAc,CAACe,EAAGf,aAAa,GAAK3D,EAAI,GAAI0E,EAAGf,aAAa,GAAK3D,EAAI,WA/M5BsK,CAAQzP,IAAIkK,SAAU,GAClD,UAAhBrL,GA2QT,WAA4B,QAAA6Q,EAAAC,UAAAzJ,OAAN0J,EAAI,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJF,EAAIE,GAAAH,UAAAG,GACtB,OACIlQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0H,SAAA,KACKqI,EAAKrP,IAAI,SAACxB,EAAMoB,GAIb,OAHKpB,EAAKuM,MAAKvM,EAAKuM,IAAM,CAAC,IAAMnL,EAAG,IAAMA,IAC1CpB,EAAKuM,IAAI,KACTvM,EAAKuM,IAAI,GAAK,IAAMvM,EAAKuM,IAAI,GAEzB1L,EAAAC,EAAAC,cAAA,KACIY,IAAG,aAAAJ,OAAeH,EAAI,GACtBwG,MAAO,CAAErC,MAAO,WAChBoD,KAAM3I,EAAKgR,KACXpI,IAAI,sBACJvC,OAAO,UAEPxF,EAAAC,EAAAC,cAACwD,EAAA,EAAI,CAACqD,MAAK9D,OAAA4D,EAAA,EAAA5D,CAAA,GAAOmN,EAAYpC,WAAA,EAAA/K,OAAAgL,EAAA,EAAAhL,CAAI9D,EAAKuM,MAAI,CAAEhH,MAAOvF,EAAKuF,cAzRrE2L,CAEI,CACIF,KACkC,IAA9BG,KAAKC,MAAMD,KAAKE,UACV,8CACA,oCACV9E,IAAK,CAAC,IAAK,MAGf,CAAEyE,KAAM,oCAAqCzE,IAAK,CAAC,EAAG,GAAIhH,MAAO,YAEzE1E,EAAAC,EAAAC,cAACuQ,EAAO,CACJvH,aAAce,EAAGf,aACjBtD,aAAcA,EACd/C,UAAWA,EACX5D,YAAaA,EACb4G,KAAMA,EACNC,UAAWA,EACXC,aAAcA,EACdxD,UAAWA,IAEfvC,EAAAC,EAAAC,cAAA,OACIwQ,aAAc,WAEV,OADAlE,GAAU,GACHI,GAAM,IAEjB+D,aAAc,kBAAM/D,GAAM,IAC1BgE,cAAeC,EACfvN,QA4FZ,SAAoBlD,GAAG,IACX0Q,EAAqB1Q,EAArB0Q,QAASC,EAAY3Q,EAAZ2Q,QAEjB,GAAI9G,EAAGwB,MAAM,KAAOqF,GAAW7G,EAAGwB,MAAM,KAAOsF,EAC/C,OAAOxO,EAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAAUgH,EAAE,CAAEf,aAAc8H,EAAQhD,WAAA,EAAA/K,OAAAgL,EAAA,EAAAhL,CAAIgO,EAAUH,EAASC,UA/FtEG,YAkGZ,SAAmB9Q,GACfoM,GAAU,GAAM,IACRsE,EAAqB1Q,EAArB0Q,QAASC,EAAY3Q,EAAZ2Q,QACjB,OAAOxO,EAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAAUgH,EAAE,CAAEwB,MAAO,CAACqF,EAASC,GAAUvF,QAASyF,EAAUH,EAASC,EAAS,QApGzFI,UAAW,kBAAM3E,GAAU,IAC3B4E,YAsGZ,SAAmBhR,GACf,GAAKmM,EAAL,CAAuB,IACfuE,EAAqB1Q,EAArB0Q,QAASC,EAAY3Q,EAAZ2Q,QACjB,OAAOxO,EAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAAUgH,EAAE,CAAEyB,IAAKuF,EAAUH,EAASC,EAAS,EAAG9G,EAAGuB,eAxGhE6F,QAASC,GAETtR,EAAAC,EAAAC,cAAA,OAAKW,UAAW8B,EAAQxB,KAAM4F,MAAOqH,EAAQC,UACzCrO,EAAAC,EAAAC,cAACqR,EAAM,CACHrS,MAAK,GAAAwB,OAAKiC,EAAQzD,MAAK,KAAAwB,OAAIiC,EAAQ2I,QAAO,KAAA5K,OACtC6L,EAAY5J,EAAQ0I,aAAe1I,EAAQwI,gBAE/ClM,YAAaA,KAGpB6G,EAAU7G,GAAaqH,OAAS,GAC7BR,EAAU7G,GAAa0B,IAAI,SAAA6Q,GACvB,OACIxR,EAAAC,EAAAC,cAAA,OACIY,IAAG,GAAAJ,OAAK8Q,EAAI1N,SAASU,WAAU,QAC/BoM,cAAe,SAAAxQ,GAGX,OAFAA,EAAEqR,kBACFrR,EAAEC,iBACK0F,EAAa,SAAA8E,GAAI,OAAA5H,OAAA4D,EAAA,EAAA5D,CAAA,GACjB4H,EAAK5H,OAAAsE,EAAA,EAAAtE,CAAA,GACPhE,EAAc4L,EAAK5L,GAAauI,OAAO,SAAAkK,GAAI,OAAIA,IAASF,SAGjEzK,MAAK9D,OAAA4D,EAAA,EAAA5D,CAAA,CACDuF,OAAQ,EACR3D,SAAU,SACP2J,EAAagD,EAAI1N,WAExBjD,UAAS,GAAAH,OAAKiC,EAAQ2I,QAAO,KAAA5K,OAAIiC,EAAQwI,gBACzClG,MAAO,GAAKmH,EACZxB,OAAQ,GAAKwB,GAEbpM,EAAAC,EAAAC,cAAA,QACI+E,MAAK,GAAAvE,OAAK,GAAK0L,EAAK,MACpBxB,OAAM,GAAAlK,OAAK,GAAK0L,EAAK,MACrBuF,OAAO,UACPC,KAAK,cACLC,YAAY,UAMpC7R,EAAAC,EAAAC,cArGI,SAAAwC,GAAK,OACb1C,EAAAC,EAAAC,cAAA,OACIoD,QAASZ,EAAMY,QACf+N,QAAS3O,EAAM2O,QAAU3O,EAAM2O,QAAUC,EACzCJ,YAAaxO,EAAMoP,UACnBnB,aAAc,kBAAM/D,GAAM,IAC1BgE,cAAelO,EAAMkO,cAAgBlO,EAAMkO,cAAgB,SAAAxQ,GAAC,OAAIA,EAAEC,kBAClEQ,UAAS,GAAAH,OAAKiC,EAAQ2I,QAAO,KAAA5K,OAAIiC,EAAQwI,gBACzClG,MAAO,GAAKmH,EACZxB,OAAQ,GAAKwB,EACbrF,MAAOrE,EAAMqE,OAEb/G,EAAAC,EAAAC,cAAA,QACI+E,MAAK,GAAAvE,OAAK,GAAK0L,EAAK,MACpBxB,OAAM,GAAAlK,OAAK,GAAK0L,EAAK,MACrBuF,OAAQjP,EAAMgC,MACdkN,KAAK,cACLC,YAAY,QAoFZ,CACAnN,MAAM,QACNqC,MAAOqH,EAAQG,cACfjL,QAAS,kBAAMf,EAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAAUgH,EAAE,CAAEf,aAAc,CAAC,EAAG,QAC3D0H,cAAeC,IAEnB7Q,EAAAC,EAAAC,cAACmD,EAAA,EAAI,CACD0O,cAAe,CAAEC,gBAAgB,GACjC/J,KAAMkC,QAAQhF,EAAKK,QACnB0C,SAAU/C,EAAKK,OACfyM,eAAgB,CAAEpJ,IAAK1D,EAAKsG,MAAM,GAAIyG,KAAM/M,EAAKsG,MAAM,IACvD0G,gBAAiB,iBACjBvB,cAAe,SAAAxQ,GAEX,OADAA,EAAEC,iBACK+R,KAEXjK,QAAS,kBAAMiK,MAEfpS,EAAAC,EAAAC,cAACmD,EAAA,EAAM,CAACwE,KAAK,QAAQvE,QA0HjC,SAAyBlD,GAErB,OADAgS,IACOrM,EAAa,SAAA8E,GAKhB,OAJAA,EAAK5L,GAAawB,KAAK,CACnBoD,KAAI,aAAAnD,OAAemK,EAAK5L,GAAaqH,OAAS,GAC9CxC,SAAUkN,EAAQhD,WAAA,EAAA/K,OAAAgL,EAAA,EAAAhL,CAAIgO,EAAU9L,EAAKsG,MAAM,GAAItG,EAAKsG,MAAM,QAEvDZ,MAjI2C,cAQ1D,SAASmG,EAASqB,EAAGC,GACjB,MAAO,CAAC,GAAKD,EAAKA,EAAI,IAAO,GAAI,KAAOC,EAAKA,EAAI,IAAO,IAI5D,SAAS9D,EAAa6D,EAAGC,GACrB,IAAKA,GAAkB,kBAAND,EAAc,KAAAE,EAAWF,EAACG,EAAAvP,OAAAC,EAAA,EAAAD,CAAAsP,EAAA,GAATF,EAACG,EAAA,GAAEF,EAACE,EAAA,GACtC,MAAO,CACHN,KAAgB,IAATG,EAAI,GAAUjG,EAAQnC,EAAGyB,IAAI,GACpC7C,IAAkB,KAAXyJ,EAAI,KAAYlG,EAAQnC,EAAGyB,IAAI,IAM9C,SAASuF,EAAUoB,EAAGC,GAAoC,IAAjCG,EAAS1C,UAAAzJ,OAAA,QAAAE,IAAAuJ,UAAA,GAAAA,UAAA,GAAG3D,EAAOV,EAAGqE,UAAAzJ,OAAA,QAAAE,IAAAuJ,UAAA,GAAAA,UAAA,GAAG9F,EAAGyB,IACjD,MAAO,CAAC2G,EAAI3G,EAAI,GAAI4G,EAAI5G,EAAI,IAAI/K,IAAI,SAAAJ,GAAC,OAAIA,EAAIkS,IAsBjD,SAASnB,EAAWlR,GAAY,IAATmF,EAAGwK,UAAAzJ,OAAA,QAAAE,IAAAuJ,UAAA,GAAAA,UAAA,GAAG,EACzB,IAAIxD,EAAJ,CAAsB,IAChBmG,EAA6BtS,EAA7BsS,OAAQ5B,EAAqB1Q,EAArB0Q,QAASC,EAAY3Q,EAAZ2Q,QACvB,GAAI2B,EAAS,EAAG,CACZ,GAAa,IAAT7M,EAAY,OAChBsG,EAAQtG,EAAON,OACZ,CACH,GAAa,KAATM,EAAa,OACjBsG,EAAQtG,EAAON,GAEnB,IAAMoN,GAAYD,EAAS,EAAI7M,EAAON,EAAMM,EAAON,GAAO,GAAGqN,EACpC3B,EAAUH,EAASC,GAAQ8B,EAAA5P,OAAAC,EAAA,EAAAD,CAAA2P,EAAA,GAA7CE,EAAMD,EAAA,GAAEE,EAAMF,EAAA,GACrB,OAAOtQ,EAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAAUgH,EAAE,CAAEyB,IAAK,EAAEoH,EAASH,EAAW7B,GAAUiC,EAASJ,EAAW5B,QAG9F,SAASnL,IAA2D,IAA9CoN,EAAWjD,UAAAzJ,OAAA,QAAAE,IAAAuJ,UAAA,GAAAA,UAAA,GAAG,GAAIkD,EAAQlD,UAAAzJ,OAAA,QAAAE,IAAAuJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG,GAAImD,EAAOnD,UAAAzJ,OAAA,EAAAyJ,UAAA,QAAAvJ,EACxD2M,EAAOD,GAAoBjJ,EAAGf,aAEpCiD,EAAQ6G,GACR,IAAML,EAAWK,EAAc,GACxBI,EAC2B,IAA7BD,EAAK,GAAK,EAAIF,EAAS,IAAWN,EADzBU,EAEuB,KAA/BF,EAAK,GAAK,IAAMF,EAAS,IAAWN,EAEnCW,EAAqBC,OAAOC,OAAOvO,MAAQ,EAAlCwO,EAAqCF,OAAOC,OAAO5I,OAAS,EAC5E,OAAOrI,EAAU,SAAA0H,GAAE,OAAAhH,OAAA4D,EAAA,EAAA5D,CAAA,GAAUgH,EAAE,CAAEyB,IAAK,EAAE0H,EAAQE,GAAUD,EAAQI,OA6CtE,SAAS5C,EAAYzQ,GACjBA,EAAEC,iBAAiB,IACXyQ,EAA6B1Q,EAA7B0Q,QAASC,EAAoB3Q,EAApB2Q,QAASvL,EAAWpF,EAAXoF,OAC1B,OAAOuH,EAAO,SAAAlC,GAAI,OAAA5H,OAAA4D,EAAA,EAAA5D,CAAA,GAAU4H,EAAI,CAAErF,OAAQA,EAAQiG,MAAO,CAACqF,EAASC,OAcvE,SAASqB,IACL,OAAOrF,EAAO,SAAAlC,GAAI,OAAA5H,OAAA4D,EAAA,EAAA5D,CAAA,GAAU4H,EAAI,CAAErF,OAAQ,SA6D9C,SAAS4K,EAAaiC,EAAGC,GACrB,MAAO,CACH9J,OAAQ,EACR3D,SAAU,WACVqN,KAAU,GAAJG,EAASjG,EAAQnC,EAAGyB,IAAI,GAC9B7C,IAAS,GAAJyJ,EAASlG,EAAQnC,EAAGyB,IAAI,GAC7BzG,MAAO,GAAKmH,EACZxB,OAAQ,GAAKwB,MCtdnBlL,EAAQwS,yBAAe,CACzBC,QAAS,CACL/L,KAAM,QAEVnG,WAAY,CACRmS,iBAAiB,KAaVC,EATH,SAAAnR,GACR,OACI1C,EAAAC,EAAAC,cAAC4T,EAAA,iBAAgB,CAAC5S,MAAOA,GACrBlB,EAAAC,EAAAC,cAACmD,EAAA,EAAW,MACZrD,EAAAC,EAAAC,cAAC6T,EAAI,QCNG5J,QACa,cAA7BoJ,OAAOzP,SAASkQ,UAEiB,UAA7BT,OAAOzP,SAASkQ,UAEhBT,OAAOzP,SAASkQ,SAASC,MAAM,mECXvCC,IAASC,OAAOnU,EAAAC,EAAAC,cAACkU,EAAG,MAAKC,SAASC,eAAe,SDoHzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAC/BA,EAAaC","file":"static/js/main.60e42b61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.973ebe4f.png\";","import React from 'react';\n\nconst Images = ({ selectedMap, image }) => {\n    const info = mapInfo(selectedMap);\n    return (\n        <div onDragStart={e => e.preventDefault()}>\n            {(() => {\n                const arr = [];\n                for (let i = 0; i < 8; i++) {\n                    for (let g = 0; g < 8; g++) {\n                        arr.push(`${i},${g}`);\n                    }\n                }\n                return arr;\n            })().map(url => {\n                return <img className={image} key={url} alt={url} src={`${info}/${url}.png`} />;\n            })}\n        </div>\n    );\n    function mapInfo(selectedMap) {\n        const info = {\n            cogmap1: `images/cogmap1/`,\n            cogmap2: `images/cogmap2/`,\n            faintSignal: `images/faintSignal/`,\n            nadir: `images/nadir`,\n            oshan: `images/oshan/`,\n            clarion: `images/clarion/`,\n            //destiny: `images/destiny/`,\n            atlas: `images/atlas/`,\n            //horizon: `/images/horizon/`,\n            //mushroom: `/images/mushroom/`,\n            //manta: `/images/manta/`,\n            kondaru: `images/kondaru/`,\n            donut2: `images/donut2/`,\n            //fleet: `/images/fleet/`,\n            donut3: `images/donut3/`,\n            adventurezone: `images/adventurezone/`,\n            /*\n            //Leaving this here, Ideally Goonhub will be added to the CI/CD eventually so we don't need to update maps\n            cogmap1: `https://goonhub.com/images/maps/cogmap/z1`,\n            cogmap2: `https://goonhub.com/images/maps/cogmap2/z1`,\n            faintSignal: `https://goonhub.com/images/maps/cogmap2/z3`,\n            oshan: `https://goonhub.com/images/maps/oshan/z1`,\n            clarion: `https://goonhub.com/images/maps/clarion/z1`,\n            destiny: `https://goonhub.com/images/maps/destiny/z1`,\n            atlas: `https://goonhub.com/images/maps/atlas/z1`,\n            horizon: `https://goonhub.com/images/maps/horizon/z1`,\n            mushroom: `https://goonhub.com/images/maps/mushroom/z1`,\n            manta: `https://goonhub.com/images/maps/manta/z1`,\n            kondaru: `https://goonhub.com/images/maps/kondaru/z1`,\n            donut2: `https://goonhub.com/images/maps/donut2/z1`,\n            fleet: `https://goonhub.com/images/maps/bellerophon%20fleet/z1`,\n            donut3: `https://goonhub.com/images/maps/donut3/z1`,\n            */\n        };   \n        if (!info[selectedMap]) return info['cogmap1'];\n        return info[selectedMap];\n    }\n};\n\nexport default Images;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Collapse, IconButton } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow } from '@material-ui/icons';\nimport MapIcon from '@material-ui/icons/Map';\n\nconst styles = theme => ({\n    main: {\n        // Height of button that's being translated\n        marginTop: -48 + theme.spacing.unit,\n    },\n    line: {\n        fontSize: theme.typography.caption.fontSize,\n    },\n    list: {\n        maxHeight: '297px',\n        overflow: 'auto',\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n});\n\nconst Locations = props => {\n    const { classes, math, selectMap } = props;\n    const [collapseIn, collapse] = useState(false);\n    return (\n        <Paper className={classes.main}>\n            <Typography\n                onClick={() => collapse(!collapseIn)}\n                align=\"center\"\n                variant=\"overline\"\n                className={classes.headerText}\n            >\n                Adventure Zones\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n            </Typography>\n            <Collapse in={collapseIn}>\n                <Typography component=\"div\" variant=\"body2\" className={classes.list}>\n                    <ul>\n                        {[\n                            { name: 'ainley staff retreat', location: [158, 257] },\n                            { name: 'biodome', location: [120, 164] },\n                            { name: 'ice moon', location: [15, 147] },\n                            { name: 'lava moon', location: [88, 106] },\n                            { name: 'mars', location: [190, 135] },\n                            { name: 'meat station', location: [209, 23] },\n                            { name: 'museum of lunar history', location: [105, 212] },\n                            { name: 'solar observatory', location: [97, 87] },\n                        ].map(loc => {\n                            const [xModifier, yModifier] = math.modifiers;\n                            const [xDivisor, yDivisor] = math.divisors;\n                            loc.location[0] = loc.location[0] / xDivisor + xModifier;\n                            loc.location[1] = loc.location[1] / yDivisor + yModifier;\n                            return (\n                                <li key={`${loc.name}_${loc.location.toString()}`}>\n                                    <p className={classes.line}>{loc.name.toUpperCase()}</p>\n                                    {`X: ${loc.location[0]}, Y: ${loc.location[1]}`}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                \n                {/*Changes map to AdventureZone, may turn this into a captcha eg. How many Go-Karts are in the VR arcade*/}\n                <IconButton color=\"default\" onClick={() => selectMap(\"adventurezone\")}>\n                    <MapIcon/> \n                    <div className={classes.line}>&ensp;SPOILERS AHEAD</div>\n                </IconButton>\n                \n                </Typography>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(Locations);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormControl, Select, Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    textField: {\n        margin: theme.spacing.unit,\n        width: `calc(100% - ${theme.spacing.unit * 2}px)`,\n    },\n});\n\nconst MapSelect = props => {\n    const { classes, selectMap, selectedMap } = props;\n    return (\n        <Paper className={classes.paper}>\n            <FormControl className={classes.textField}>\n                <Select\n                    MenuProps={classes.menu}\n                    native\n                    value={selectedMap}\n                    onChange={e => {\n                        let val = e.target.value;\n                        return selectMap(val);\n                    }}\n                >\n                    <option hidden value=\"adventurezone\">Adventure Zone</option>\n                    <option value=\"faintSignal\">Debris Field</option>\n                    <option value=\"cogmap1\">Cogmap 1</option>\n                    <option value=\"cogmap2\">Cogmap 2</option>\n                    <option value=\"donut2\">Donut 2</option>\n                    <option value=\"donut3\">Donut 3</option>\n                    <option value=\"nadir\">Nadir</option>\n                    <option value=\"kondaru\">Kondaru</option>\n                    <option value=\"oshan\">Oshan</option>\n                    <option value=\"clarion\">Clarion</option>\n                    <option value=\"atlas\">Atlas</option> \n\n                </Select>\n            </FormControl>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(MapSelect);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Collapse, List, ListItem, Paper, Typography, IconButton, TextField, InputAdornment } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow, Close, MyLocation } from '@material-ui/icons';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit,\n    },\n    headerText: {\n        marginRight: theme.spacing.unit * 6,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    listHeight: {\n        maxHeight: 538 - 48 * 2 - theme.spacing.unit * 4,\n        overflowY: 'auto',\n    },\n});\n\nconst FavoritesMenu = props => {\n    const { classes, centerCoords, zoom, favorites, modFavorites, math, selectedMap } = props;\n    // This is to handle a sort of auto open, auto close thing\n    const [collapseIn, handleCollapse] = useState(false);\n    const [permaCollapse, doPermaCollapse] = useState(false);\n\n    useEffect(() => {\n        if (favorites[selectedMap].length >= 1 && !collapseIn && !permaCollapse) return handleCollapse(true);\n        else if (favorites[selectedMap].length < 1) return handleCollapse(false);\n    }, [props]);\n\n    return (\n        <Paper className={classes.paper}>\n            <Typography\n                className={classes.headerText}\n                aria-owns={collapseIn ? 'favorites-menu' : undefined}\n                aria-haspopup=\"true\"\n                variant=\"overline\"\n                align=\"center\"\n                onClick={() => {\n                    if (!favorites[selectedMap].length) return handleCollapse(false);\n                    else {\n                        doPermaCollapse(true);\n                        return handleCollapse(!collapseIn);\n                    }\n                }}\n            >\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n                Favorites\n            </Typography>\n            <Collapse in={collapseIn}>\n                <List id=\"favorites-menu\" className={classes.listHeight}>\n                    {favorites[selectedMap].map((each, index) => {\n                        return (\n                            <ListItem key={`${each.location}_key`}>\n                                <TextField\n                                    value={each.name}\n                                    onChange={e => {\n                                        let val = e.target.value;\n\n                                        return modFavorites(favorites => {\n                                            favorites[selectedMap][index].name = val;\n                                            return { ...favorites };\n                                        });\n                                    }}\n                                    FormHelperTextProps={{ style: { textAlign: 'center' } }}\n                                    helperText={`Real: [${each.location.toString()}] --- Console: [${each\n                                        .location[0] /\n                                        math.divisors[0] +\n                                        math.modifiers[0]},${each.location[1] / math.divisors[1] + math.modifiers[1]}]`}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <IconButton\n                                                    onClick={() => centerCoords(zoom, [0, 0], each.location)}\n                                                    aria-label=\"go to\"\n                                                >\n                                                    <MyLocation />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={() => {\n                                                        if (favorites.length === 1) handleCollapse(false);\n                                                        return modFavorites(favs => ({\n                                                            ...favs,\n                                                            [selectedMap]: favs[selectedMap].filter(\n                                                                items => items !== each\n                                                            ),\n                                                        }));\n                                                    }}\n                                                    aria-label=\"delete\"\n                                                >\n                                                    <Close />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(FavoritesMenu);\n","import React from 'react';\nimport { Button, Popover, Typography } from '@material-ui/core';\n\nconst HelperText = () => {\n    return (\n        <>\n            <h3>Help, I'm stuck!</h3>\n            <hr />\n            <h3>Finding inital values (Ingame)</h3>\n            <ol type=\"1\">\n                <li>Set the teleporter to X: 100 Y: 50 Z: 0</li>\n                <li>Press the Scan button</li>\n                <li>If your X or Y coords are invalid Increment them by +25 until valid\n                <br></br>&emsp;On the top left of the website change the console coord to any valid ingame coord\n                </li>\n\n                <li>If your Z coord is invalid Increment it by +1\n                <br></br>&emsp;The 1<sup>st</sup> valid Z level is the Station\n                <br></br>&emsp;The 2<sup>nd</sup> valid Z level is the Adventure Zone\n                <br></br>&emsp;The 3<sup>rd</sup> valid Z level is the Debris Field / Trench\n                </li>\n            </ol>\n\n            <h3>Calibrating the website</h3>\n            <ol type=\"1\">\n                <li>Find a GPS, Change the identifer to \"TELE\" and toggle distress signal</li>\n                <li>Send the GPS to the X2 & Y2 Coordinates</li>\n                <li>Using another GPS find the TELE GPS and input it's coordinates in the GPS Column for X1 & Y2</li>\n                <li>Repeat the previous two steps for X2 & Y2</li>\n                <br></br>\n                <li>Click on a visible tile near you, Enter the values from the Console Coordinates box Ingame, and press the receive button\n                    <br></br>&emsp;If you see a portal appear on that spot your calibration is accurate\n                    <br></br>&emsp;If you do not see a portal, Check coordinates, or repeat GPS calibration\n                </li>\n\n                <li>Record the values in the table onto a piece of paper for your fellow scientists</li>\n            </ol>\n            <p>When you're done, you can close the math table by clicking the \"DO TELESCIENCE MATH\" header.</p>\n            <p>Change maps with the Top Right dropdown box</p>\n            <p>Right click anywhere to add favorites.</p>\n            <p>ALT + WASD, Arrow Keys, or Numpad to navigate via keyboard.</p>\n            <p>\n                Stuck? Check the SS13 wiki on{`\\t`}\n                <Button\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    href=\"https://wiki.ss13.co/Telescience#Decoding_the_teleporter\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    decoding the teleporter\n                </Button>\n            </p>\n            <p>\n                Need more info?{`\\t`}\n                <Button\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    href=\"https://github.com/vortex1942/telescience\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    Click here\n                </Button>\n                {`\\t`}for a detailed readme.\n            </p>\n            <hr />\n            <p>Original credit goes to Kayle7777.{`\\t`}\n            <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                size=\"small\"\n                href=\"https://github.com/Kayle7777/telescience\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                Click Here\n            </Button>\n            {`\\t`}for a Kayle7777's github\n            </p>\n        </>\n    );\n};\n\nconst HelperPopover = props => {\n    const { classes, open, anchorEl, onClose, anchorOrigin } = props;\n    return (\n        <Popover\n            className={classes.popOver}\n            aria-label=\"Math help\"\n            id=\"math-tips\"\n            open={open}\n            anchorEl={anchorEl}\n            onClose={onClose}\n            anchorOrigin={anchorOrigin}\n        >\n            <Typography variant=\"caption\" className={classes.popOverText}>\n                <HelperText />\n            </Typography>\n        </Popover>\n    );\n};\n\nexport default HelperPopover;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Paper,\n    Collapse,\n    TextField,\n    InputAdornment,\n    Typography,\n    IconButton,\n    Fab,\n} from '@material-ui/core';\nimport { Help, KeyboardArrowDown as Arrow, VerticalAlignCenter as GoTo } from '@material-ui/icons';\nimport Locations from './Locations';\nimport MapSelect from './MapSelect';\nimport FavoritesMenu from './FavoritesMenu';\nimport HelperPopover from './HelperPopover';\n\nconst styles = theme => ({\n    textField: {\n        width: 75,\n    },\n    main: {\n        zIndex: 2,\n        position: 'fixed',\n        marginLeft: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 257,\n    },\n    resultsPos: {\n        zIndex: 2,\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n    popOver: {\n        marginLeft: theme.spacing.unit,\n    },\n    popOverText: {\n        margin: theme.spacing.unit,\n        maxWidth: 257 + theme.spacing.unit * 30,\n    },\n    goto: {\n        zIndex: 2,\n        transform: 'translate(102px, -127px)',\n    },\n    rightPanel: {\n        position: 'absolute',\n        zIndex: 2,\n        top: 0,\n        right: 0,\n        width: 300,\n    },\n    helpButton: {\n        position: 'fixed',\n        bottom: 0,\n        right: 0,\n        marginBottom: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit * 2,\n    },\n});\n\nconst Overlay = props => {\n    const { classes, selectedTile, centerCoords, selectMap, selectedMap, zoom, favorites, modFavorites } = props;\n    // anchorEl / doAnchor used for HelperPopover popover\n    const [anchorEl, doAnchor] = useState(null);\n    // mathIn / toggleMath used for math menu collapse\n    const [mathIn, toggleMath] = useState(true);\n    const [gpsValues, setValue] = useState({ input: [100, 50], actualX: [6, 7], actualY: [49, 51] });\n    const xDivisor = gpsValues.actualX[1] - gpsValues.actualX[0],\n        yDivisor = gpsValues.actualY[1] - gpsValues.actualY[0],\n        xModifier = gpsValues.input[0] - gpsValues.actualX[0] / xDivisor,\n        yModifier = gpsValues.input[1] - gpsValues.actualY[0] / yDivisor;\n    return (\n        <>\n            <div className={classes.main}>\n                <Paper>\n                    <Typography\n                        className={classes.headerText}\n                        onClick={() => toggleMath(!mathIn)}\n                        variant=\"overline\"\n                        align=\"center\"\n                        id=\"tableTitle\"\n                    >\n                        Do telescience math\n                        <IconButton disabled className={mathIn ? classes.arrow : classes.arrowShift}>\n                            <Arrow />\n                        </IconButton>\n                    </Typography>\n                    <Collapse in={mathIn}>\n                        <Table padding=\"dense\">\n                            <TableHead>\n                                {/* HEADER */}\n                                <TableRow>\n                                    <TableCell align=\"center\">Console coord</TableCell>\n                                    <TableCell align=\"center\">GPS coord</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody data-testid=\"telescience-gps\">\n                                {/* CONSOLE X1 // ACTUAL X1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 0)}\n                                            value={gpsValues.input[0]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X1</InputAdornment>,\n                                                'data-testid': 'input-1-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 0)}\n                                            value={gpsValues.actualX[0]}\n                                            InputProps={{\n                                                'data-testid': 'actual-x-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y1 // ACTUAL Y1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 1)}\n                                            value={gpsValues.input[1]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y1</InputAdornment>,\n                                                'data-testid': 'input-1-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 0)}\n                                            value={gpsValues.actualY[0]}\n                                            InputProps={{\n                                                'data-testid': 'actual-y-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE X2 // ACTUAL X2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={gpsValues.input[0] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X2</InputAdornment>,\n                                                'data-testid': 'input-2-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 1)}\n                                            value={gpsValues.actualX[1]}\n                                            InputProps={{\n                                                'data-testid': 'actual-x-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y2 // ACTUAL Y2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={gpsValues.input[1] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y2</InputAdornment>,\n                                                'data-testid': 'input-2-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 1)}\n                                            value={gpsValues.actualY[1]}\n                                            InputProps={{\n                                                'data-testid': 'actual-y-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Collapse>\n                </Paper>\n                <Paper className={classes.resultsPos}>\n                    <Typography className={classes.headerText} variant=\"overline\" align=\"center\" id=\"tableTitle\">\n                        Real Coordinates\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[0]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            return props.transform(tf => ({\n                                                ...tf,\n                                                selectedTile: [val, tf.selectedTile[1]],\n                                            }));\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                            'data-testid': 'selected-x',\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[1]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            return props.transform(tf => ({\n                                                ...tf,\n                                                selectedTile: [tf.selectedTile[0], val],\n                                            }));\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                            'data-testid': 'selected-y',\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Typography variant=\"overline\" align=\"center\">\n                        Console Coordinates\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[0] / xDivisor + xModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                            'data-testid': 'console-x',\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[1] / yDivisor + yModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                            'data-testid': 'console-y',\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <HelperPopover\n                    classes={classes}\n                    open={Boolean(anchorEl)}\n                    anchorEl={anchorEl}\n                    onClose={() => doAnchor(null)}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                />\n                <IconButton tabIndex={-1} className={classes.goto} onClick={() => centerCoords()}>\n                    <GoTo />\n                </IconButton>\n                <Locations \n                math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier]}} \n                selectMap={selectMap}\n                selectedMap={selectedMap}   \n                />   \n            </div>\n            <div className={classes.rightPanel}>\n                <MapSelect selectMap={selectMap} selectedMap={selectedMap} />\n                <FavoritesMenu\n                    zoom={zoom}\n                    centerCoords={centerCoords}\n                    favorites={favorites}\n                    selectedMap={selectedMap}\n                    modFavorites={modFavorites}\n                    math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }}\n                />\n                <Fab\n                    className={classes.helpButton}\n                    onClick={event => {\n                        let val = event.currentTarget;\n                        doAnchor(val);\n                    }}\n                >\n                    <Help style={{ height: '100%', width: '100%', transform: 'scale(1.21, 1.21)' }} />\n                </Fab>\n            </div>\n        </>\n    );\n    function update(e, target, index) {\n        let val = parseInt(e.target.value);\n        if (!val) val = 0;\n        return setValue(prev => {\n            let newArr = prev[target];\n            newArr[index] = val;\n            return { ...prev, [target]: newArr };\n        });\n    }\n};\n\nexport default withStyles(styles)(Overlay);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Menu, Button } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\nimport spaceTile from '../space.png';\nimport Images from '../components/Images';\nimport Overlay from '../components/Overlay';\n\nconst styles = theme => ({\n    main: {\n        backgroundImage: `url(${spaceTile})`,\n        display: 'block',\n        width: 1200 * 8,\n        height: 1200 * 8,\n        // transition: theme.transitions.create(['transform'], {\n        //     duration: 100,\n        // }),\n    },\n    image: {\n        verticalAlign: 'middle',\n        width: 1200,\n        height: 1200,\n    },\n    imageUnclicked: {\n        cursor: 'grab',\n    },\n    imageClicked: {\n        cursor: 'grabbing',\n    },\n    noClick: {\n        userSelect: 'none',\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    // tf.mouse is used to determine if the mouse moved during onClick\n    const [tf, transform] = useState({\n        initial: [0, 0],\n        mouse: [0, 0],\n        pos: [-2200, -2000],\n        selectedTile: [150, 150],\n    });\n    const [selectedMap, selectMap] = useState('cogmap1');\n    const [favorites, modFavorites] = useState({\n        cogmap1: [\n            { name: 'Telescience', location: [112, 123] },\n            { name: 'Jazz Bar', location: [159, 174] },\n        ],\n        cogmap2: [\n            { name: 'Telescience', location: [104, 120] },\n            { name: 'Research Station', location: [40, 49] },\n        ],\n        faintSignal: [\n            { name: 'Space Diner', location: [177, 227] },\n            { name: \"Moonshiner's Retreat\", location: [108, 160] },\n            { name: \"Radio Station\", location: [277, 268] },\n        ],\n        oshan: [\n            { name: 'Spacemas Den', location: [207, 240] },\n            { name: 'Telescience', location: [181, 174] },\n        ],\n        clarion: [\n            { name: 'Drug Den', location: [142, 173] },\n            { name: 'Telescience', location: [153, 107] },\n        ],\n        destiny: [\n            { name: 'Nerd Lounge', location: [73, 103] },\n            { name: 'Telescience', location: [174, 104] },\n        ],\n        atlas: [\n            { name: 'Owlery', location: [140, 185] },\n            { name: 'Telescience', location: [140, 164] },\n        ],\n        samedi: [],\n        horizon: [\n            { name: 'AI Core', location: [114, 119] },\n            { name: 'Telescience', location: [235, 154] },\n        ],\n        mushroom: [\n            { name: 'AI Core', location: [185, 40] },\n            { name: 'Telescience', location: [134, 103] },\n        ],\n        manta: [\n            { name: 'AI Core', location: [145, 169] },\n            { name: 'Telescience', location: [169, 128] },\n        ],\n        kondaru: [\n            { name: 'Indigo Research Outpost', location: [28, 32] },\n            { name: 'Telescience', location: [123, 92] },\n        ],\n        donut2: [\n            { name: 'AI Core', location: [241, 73] },\n            { name: 'Telescience', location: [223, 188] },\n        ],\n        fleet: [\n            { name: 'AI Core', location: [128, 98] },\n            { name: 'Telescience', location: [114, 69] },\n        ],\n        donut3: [\n            { name: 'Clown Hell', location: [128, 59] },\n            { name: 'Telescience', location: [156, 76] },\n            { name: 'Clown Asylum', location: [244, 244] },\n        ],\n        nadir: [\n            { name: 'The Ring', location: [175, 115] },\n            { name: 'Telescience', location: [140, 162] },\n        ],\n        adventurezone: [\n            { name: 'Ainley Staff Retreat', location: [158, 257] },\n            { name: 'Biodome', location: [120, 164] },\n            { name: 'Ice moon', location: [15, 147] },\n            { name: 'Lava moon', location: [88, 106] },\n            { name: 'Mars', location: [190, 135] },\n            { name: 'Meat Station', location: [209, 23] },\n            { name: 'Museum of Lunar History', location: [105, 212] },\n            { name: 'Solar Observatory', location: [97, 87] }\n        ],\n    });\n    const [zoom, setZoom] = useState(7);\n    const scale = zoom / 10;\n    // mousedown / clickDown used for wheel and mousemove events\n    const [mousedown, clickDown] = useState(false);\n    // focussed / focus used for keydown events.\n    const [focussed, focus] = useState(false);\n    // menu / doMenu used for menu events (obviously)\n    const [menu, doMenu] = useState({ mouse: [0, 0], target: null });\n\n    // Check for an existing localStorage item, if it is different than the existing state localStorage item, set it as the state.\n    useEffect(() => {\n        const data = getStorage();\n        if (data) modFavorites(data);\n    }, []);\n\n    // Set a new localStorage item every time a favorite is added or removed\n    useEffect(\n        () => {\n            setStorage(favorites);\n        },\n        [JSON.stringify(favorites)]\n    );\n\n    const iStyles = {\n        divStyle: {\n            transformOrigin: `0 0`,\n            transform: `translate3D(${tf.pos[0]}px, ${tf.pos[1]}px, 0) scale(${scale})`,\n        },\n        selectorStyle: {\n            zIndex: 1,\n            position: 'fixed',\n            ...tilePosition(tf.selectedTile),\n        },\n    };\n\n    const Svg = props => (\n        <svg\n            onClick={props.onClick}\n            onWheel={props.onWheel ? props.onWheel : mouseWheel}\n            onMouseDown={props.mouseDown}\n            onMouseEnter={() => focus(true)}\n            onContextMenu={props.onContextMenu ? props.onContextMenu : e => e.preventDefault()}\n            className={`${classes.noClick} ${classes.imageUnclicked}`}\n            width={32 * scale}\n            height={32 * scale}\n            style={props.style}\n        >\n            <rect\n                width={`${32 * scale}px`}\n                height={`${32 * scale}px`}\n                stroke={props.color}\n                fill=\"transparent\"\n                strokeWidth=\"4\"\n            />\n        </svg>\n    );\n\n    return (\n        <div className={classes.noClick} onKeyDown={e => keyDown(e)} tabIndex={0}>\n            {selectedMap === 'oshan' &&\n                easterEgg(\n                    // Ocean man OR sea of love\n                    {\n                        link:\n                            Math.round(Math.random()) === 0\n                                ? 'https://www.youtube.com/watch?v=6E5m_XtCX3c'\n                                : 'https://youtu.be/3PgwDlbdew8?t=10',\n                        pos: [150, 150],\n                    },\n                    // Tiburón bebé\n                    { link: 'https://youtu.be/XqZsoesa55w?t=12', pos: [3, 4], color: '#6D7373' }\n                )}\n            <Overlay\n                selectedTile={tf.selectedTile}\n                centerCoords={centerCoords}\n                selectMap={selectMap}\n                selectedMap={selectedMap}\n                zoom={zoom}\n                favorites={favorites}\n                modFavorites={modFavorites}\n                transform={transform}\n            />\n            <div\n                onMouseLeave={() => {\n                    clickDown(false);\n                    return focus(false);\n                }}\n                onMouseEnter={() => focus(true)}\n                onContextMenu={contextMenu}\n                onClick={mouseClick}\n                onMouseDown={mouseDown}\n                onMouseUp={() => clickDown(false)}\n                onMouseMove={mouseMove}\n                onWheel={mouseWheel}\n            >\n                <div className={classes.main} style={iStyles.divStyle}>\n                    <Images\n                        image={`${classes.image} ${classes.noClick} ${\n                            mousedown ? classes.imageClicked : classes.imageUnclicked\n                        }`}\n                        selectedMap={selectedMap}\n                    />\n                </div>\n                {favorites[selectedMap].length > 0 &&\n                    favorites[selectedMap].map(fav => {\n                        return (\n                            <svg\n                                key={`${fav.location.toString()}_SVG`}\n                                onContextMenu={e => {\n                                    e.stopPropagation();\n                                    e.preventDefault();\n                                    return modFavorites(prev => ({\n                                        ...prev,\n                                        [selectedMap]: prev[selectedMap].filter(item => item !== fav),\n                                    }));\n                                }}\n                                style={{\n                                    zIndex: 1,\n                                    position: 'fixed',\n                                    ...tilePosition(fav.location),\n                                }}\n                                className={`${classes.noClick} ${classes.imageUnclicked}`}\n                                width={32 * scale}\n                                height={32 * scale}\n                            >\n                                <rect\n                                    width={`${32 * scale}px`}\n                                    height={`${32 * scale}px`}\n                                    stroke=\"#39FF14\"\n                                    fill=\"transparent\"\n                                    strokeWidth=\"4\"\n                                />\n                            </svg>\n                        );\n                    })}\n            </div>\n            <Svg\n                color=\"white\"\n                style={iStyles.selectorStyle}\n                onClick={() => transform(tf => ({ ...tf, selectedTile: [1, 1] }))}\n                onContextMenu={contextMenu}\n            />\n            <Menu\n                MenuListProps={{ disablePadding: true }}\n                open={Boolean(menu.target)}\n                anchorEl={menu.target}\n                anchorPosition={{ top: menu.mouse[1], left: menu.mouse[0] }}\n                anchorReference={'anchorPosition'}\n                onContextMenu={e => {\n                    e.preventDefault();\n                    return closeMenu();\n                }}\n                onClose={() => closeMenu()}\n            >\n                <Button size=\"small\" onClick={menuButtonClick}>\n                    favorite\n                </Button>\n            </Menu>\n        </div>\n    );\n\n    // This is used to place each tile selector over the image container just as if it had the 300/300 grid the game does.\n    function tileMath(x, y) {\n        return [1 + (x - (x % 32)) / 32, 300 - (y - (y % 32)) / 32];\n    }\n\n    // This is used to position each tile selector correctly, this is the CSS value applied to its absolute position.\n    function tilePosition(x, y) {\n        if (!y && typeof x === 'object') [x, y] = x;\n        return {\n            left: (x - 1) * 32 * scale + tf.pos[0],\n            top: -(y - 300) * 32 * scale + tf.pos[1],\n        };\n    }\n\n    // This is used to find the absolute pixel value of where a user clicked. The positioning of the image needs to be\n    // subtracted from the X and Y value of a users click, and the scale needs to be removed to find this value.\n    function imgCoords(x, y, funcScale = scale, pos = tf.pos) {\n        return [x - pos[0], y - pos[1]].map(i => i / funcScale);\n    }\n\n    function mouseClick(e) {\n        const { clientX, clientY } = e;\n        // Detect if we moved\n        if (tf.mouse[0] !== clientX || tf.mouse[1] !== clientY) return;\n        return transform(tf => ({ ...tf, selectedTile: tileMath(...imgCoords(clientX, clientY)) }));\n    }\n\n    function mouseDown(e) {\n        clickDown(true);\n        const { clientX, clientY } = e;\n        return transform(tf => ({ ...tf, mouse: [clientX, clientY], initial: imgCoords(clientX, clientY, 1) }));\n    }\n\n    function mouseMove(e) {\n        if (!mousedown) return;\n        const { clientX, clientY } = e;\n        return transform(tf => ({ ...tf, pos: imgCoords(clientX, clientY, 1, tf.initial) }));\n    }\n\n    function mouseWheel(e, val = 1) {\n        if (mousedown) return;\n        let { deltaY, clientX, clientY } = e;\n        if (deltaY > 0) {\n            if (zoom === 2) return;\n            setZoom(zoom - val);\n        } else {\n            if (zoom === 15) return;\n            setZoom(zoom + val);\n        }\n        const newScale = (deltaY > 0 ? zoom - val : zoom + val) / 10;\n        const [imageX, imageY] = imgCoords(clientX, clientY);\n        return transform(tf => ({ ...tf, pos: [-imageX * newScale + clientX, -imageY * newScale + clientY] }));\n    }\n\n    function centerCoords(centerScale = 12, modifier = [0, 0], newTile) {\n        const tile = newTile ? newTile : tf.selectedTile;\n        // Default to 1.2 scale, optional arg to change this\n        setZoom(centerScale);\n        const newScale = centerScale / 10;\n        const [tileX, tileY] = [\n            (tile[0] - 1 + modifier[0]) * 32 * newScale,\n            -(tile[1] - 303 + modifier[1]) * 32 * newScale,\n        ];\n        const [centerX, centerY] = [window.screen.width / 2, window.screen.height / 2];\n        return transform(tf => ({ ...tf, pos: [-tileX + centerX, -tileY + centerY] }));\n    }\n\n    function keyDown(e) {\n        if (!focussed) return;\n        let { key, altKey } = e;\n        if (!altKey) return;\n        if (key === '5' || key === ' ') return centerCoords(zoom);\n        let acceptableKeys = {\n            w: [0, 1],\n            a: [-1, 0],\n            s: [0, -1],\n            d: [1, 0],\n            ArrowUp: [0, 1],\n            ArrowLeft: [-1, 0],\n            ArrowDown: [0, -1],\n            ArrowRight: [1, 0],\n            '1': [-1, -1],\n            '2': [0, -1],\n            '3': [1, -1],\n            '4': [-1, 0],\n            '6': [1, 0],\n            '7': [-1, 1],\n            '8': [0, 1],\n            '9': [1, 1],\n            '+': 2,\n            '-': -2,\n        };\n        if (!Object.keys(acceptableKeys).includes(key)) return;\n        else {\n            const val = acceptableKeys[key];\n            if (key === '+' || key === '-') {\n                if (key === '+' && zoom >= 15) return;\n                if (key === '-' && zoom <= 3) return;\n                setZoom(zoom + val);\n                return centerCoords(zoom + val);\n            }\n            centerCoords(zoom, val);\n            return transform(tf => ({\n                ...tf,\n                selectedTile: [tf.selectedTile[0] + val[0], tf.selectedTile[1] + val[1]],\n            }));\n        }\n    }\n\n    function contextMenu(e) {\n        e.preventDefault();\n        const { clientX, clientY, target } = e;\n        return doMenu(prev => ({ ...prev, target: target, mouse: [clientX, clientY] }));\n    }\n\n    function menuButtonClick(e) {\n        closeMenu();\n        return modFavorites(prev => {\n            prev[selectedMap].push({\n                name: `Favorite #${prev[selectedMap].length + 1}`,\n                location: tileMath(...imgCoords(menu.mouse[0], menu.mouse[1])),\n            });\n            return prev;\n        });\n    }\n\n    function closeMenu() {\n        return doMenu(prev => ({ ...prev, target: null }));\n    }\n\n    function setStorage(favs) {\n        if (typeof favs !== 'string') favs = JSON.stringify(favs);\n        localStorage.setItem('telescienceFavorites', favs);\n    }\n\n    function getStorage() {\n        let data = localStorage.getItem('telescienceFavorites');\n        if (!data) return false;\n        data = JSON.parse(data);\n        let localKeys = Object.keys(data),\n            stateKeys = Object.keys(favorites);\n        if (localKeys.length !== stateKeys.length || JSON.stringify(localKeys) !== JSON.stringify(stateKeys)) {\n            let missingKey = stateKeys.filter(oKey => !localKeys.includes(oKey));\n            let extraKey = localKeys.filter(oKey => !stateKeys.includes(oKey));\n            if (missingKey.length) {\n                missingKey.forEach(key => {\n                    let obj = {};\n                    obj[key] = favorites[key];\n                    data = { ...data, ...obj };\n                });\n            }\n            if (extraKey.length) {\n                extraKey.forEach(key => {\n                    let obj = {};\n                    localKeys.pop(...extraKey);\n                    localKeys.forEach(key => {\n                        obj[key] = data[key];\n                    });\n                    data = obj;\n                });\n            }\n        }\n        return data;\n    }\n\n    function easterEgg(...args) {\n        return (\n            <>\n                {args.map((info, i) => {\n                    if (!info.pos) info.pos = [150 + i, 151 + i];\n                    info.pos[0]--;\n                    info.pos[1] = 300 - info.pos[1];\n                    return (\n                        <a\n                            key={`easteregg#${i + 1}`}\n                            style={{ color: 'inherit' }}\n                            href={info.link}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <Info style={{ ...easterEggPos(...info.pos), color: info.color }} />\n                        </a>\n                    );\n                })}\n            </>\n        );\n    }\n\n    function easterEggPos(x, y) {\n        return {\n            zIndex: 2,\n            position: 'absolute',\n            left: x * 32 * scale + tf.pos[0],\n            top: y * 32 * scale + tf.pos[1],\n            width: 32 * scale,\n            height: 32 * scale,\n        };\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}